// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: genres.sql

package db

import (
	"context"

	"github.com/gofrs/uuid"
)

const getUserGenres = `-- name: GetUserGenres :many
SELECT id, "user", name from genres
WHERE "user" = $1
ORDER BY "name" ASC
`

func (q *Queries) GetUserGenres(ctx context.Context, user uuid.UUID) ([]Genre, error) {
	rows, err := q.db.Query(ctx, getUserGenres, user)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Genre
	for rows.Next() {
		var i Genre
		if err := rows.Scan(&i.ID, &i.User, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
