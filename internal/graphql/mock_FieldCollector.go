// Code generated by mockery v2.32.4. DO NOT EDIT.

package graphql

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockFieldCollector is an autogenerated mock type for the FieldCollector type
type MockFieldCollector struct {
	mock.Mock
}

type MockFieldCollector_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFieldCollector) EXPECT() *MockFieldCollector_Expecter {
	return &MockFieldCollector_Expecter{mock: &_m.Mock}
}

// CollectAllFields provides a mock function with given fields: _a0
func (_m *MockFieldCollector) CollectAllFields(_a0 context.Context) []string {
	ret := _m.Called(_a0)

	var r0 []string
	if rf, ok := ret.Get(0).(func(context.Context) []string); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// MockFieldCollector_CollectAllFields_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CollectAllFields'
type MockFieldCollector_CollectAllFields_Call struct {
	*mock.Call
}

// CollectAllFields is a helper method to define mock.On call
//   - _a0 context.Context
func (_e *MockFieldCollector_Expecter) CollectAllFields(_a0 interface{}) *MockFieldCollector_CollectAllFields_Call {
	return &MockFieldCollector_CollectAllFields_Call{Call: _e.mock.On("CollectAllFields", _a0)}
}

func (_c *MockFieldCollector_CollectAllFields_Call) Run(run func(_a0 context.Context)) *MockFieldCollector_CollectAllFields_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockFieldCollector_CollectAllFields_Call) Return(_a0 []string) *MockFieldCollector_CollectAllFields_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFieldCollector_CollectAllFields_Call) RunAndReturn(run func(context.Context) []string) *MockFieldCollector_CollectAllFields_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockFieldCollector creates a new instance of MockFieldCollector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFieldCollector(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFieldCollector {
	mock := &MockFieldCollector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
